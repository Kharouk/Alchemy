{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/alexk.harouk/MVF/alchemy/components/Form.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\n\nconst Form = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, \"Form Creator\"), React.createElement(Formik, {\n  initialValues: {\n    email: \"\",\n    password: \"\"\n  },\n  validate: values => {\n    let errors = {};\n\n    if (!values.email) {\n      errors.email = \"Required\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = \"Invalid email address\";\n    }\n\n    return errors;\n  },\n  onSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(_JSON$stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, ({\n  values,\n  errors,\n  touched,\n  handleChange,\n  handleBlur,\n  handleSubmit,\n  isSubmitting\n}) => React.createElement(\"form\", {\n  onSubmit: handleSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  type: \"email\",\n  name: \"email\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.email,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), errors.email && touched.email && errors.email, React.createElement(\"input\", {\n  type: \"password\",\n  name: \"password\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.password,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}), errors.password && touched.password && errors.password, React.createElement(\"button\", {\n  type: \"submit\",\n  disabled: isSubmitting,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, \"Submit\")))); // https://jaredpalmer.com/formik/docs/overview\n\n\nexport default Form;","map":{"version":3,"sources":["/Users/alexk.harouk/MVF/alchemy/components/Form.js"],"names":["React","Formik","Form","email","password","values","errors","test","setSubmitting","setTimeout","alert","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,IAAI,GAAG,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,MAAD;AACE,EAAA,aAAa,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GADjB;AAEE,EAAA,QAAQ,EAAEC,MAAM,IAAI;AAClB,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;AACjBG,MAAAA,MAAM,CAACH,KAAP,GAAe,UAAf;AACD,KAFD,MAEO,IACL,CAAC,2CAA2CI,IAA3C,CACCF,MAAM,CAACF,KADR,CADI,EAIL;AACAG,MAAAA,MAAM,CAACH,KAAP,GAAe,uBAAf;AACD;;AACD,WAAOG,MAAP;AACD,GAdH;AAeE,EAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEG,IAAAA;AAAF,GAAT,KAA+B;AACvCC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAAC,gBAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHS,EAGP,GAHO,CAAV;AAID,GApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAsBG,CAAC;AACAH,EAAAA,MADA;AAEAC,EAAAA,MAFA;AAGAK,EAAAA,OAHA;AAIAC,EAAAA,YAJA;AAKAC,EAAAA,UALA;AAMAC,EAAAA,YANA;AAOAC,EAAAA;AAPA,CAAD,KASC;AAAM,EAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,EAAA,IAAI,EAAC,OADP;AAEE,EAAA,IAAI,EAAC,OAFP;AAGE,EAAA,QAAQ,EAAEF,YAHZ;AAIE,EAAA,MAAM,EAAEC,UAJV;AAKE,EAAA,KAAK,EAAER,MAAM,CAACF,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAQGG,MAAM,CAACH,KAAP,IAAgBQ,OAAO,CAACR,KAAxB,IAAiCG,MAAM,CAACH,KAR3C,EASE;AACE,EAAA,IAAI,EAAC,UADP;AAEE,EAAA,IAAI,EAAC,UAFP;AAGE,EAAA,QAAQ,EAAES,YAHZ;AAIE,EAAA,MAAM,EAAEC,UAJV;AAKE,EAAA,KAAK,EAAER,MAAM,CAACD,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EATF,EAgBGE,MAAM,CAACF,QAAP,IACCO,OAAO,CAACP,QADT,IAECE,MAAM,CAACF,QAlBX,EAmBE;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,QAAQ,EAAEW,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,CA/BJ,CAFF,CADF,C,CA8DA;;;AAEA,eAAeb,IAAf","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\n\nconst Form = () => (\n  <div>\n    <h1>Form Creator</h1>\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validate={values => {\n        let errors = {};\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\n            values.email\n          )\n        ) {\n          errors.email = \"Invalid email address\";\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n          />\n          {errors.email && touched.email && errors.email}\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.password}\n          />\n          {errors.password &&\n            touched.password &&\n            errors.password}\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </form>\n      )}\n    </Formik>\n  </div>\n);\n\n// https://jaredpalmer.com/formik/docs/overview\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}